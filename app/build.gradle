apply plugin: 'com.android.application'
apply plugin: 'findbugs'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

task findbugs(type: FindBugs) {
    ignoreFailures = true
    effort = "max"
    reportLevel = "low"
    excludeFilter = new File("${rootProject.rootDir}/quality/findbugs-filter.xml")
    classes = files("$project.buildDir/intermediates/classes")
    classpath = files()
    source = fileTree('src/main/java/')
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$rootProject.buildDir/reports/findbugs/findbugs.xml"
        }
        html {
            destination "$rootProject.buildDir/reports/findbugs/findbugs.html"
        }
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.ymsfd.practices"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionMajor
        versionName "$rootProject.ext.versionMajor.$rootProject.ext.versionMinor.$rootProject.ext.versionPatch"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters 'armeabi', 'armeabi-v7a'
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias WOODENTEA_ALIAS
            keyPassword WOODENTEA_PASSWORD
        }

        debug {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias WOODENTEA_ALIAS
            keyPassword WOODENTEA_PASSWORD
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "API_URL", '"http://api.dev.com/"'
            resValue "string", "app_name", "Refill"
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug
        }

        release {
            buildConfigField "String", "API_URL", '"http://api.prod.com/"'
            resValue "string", "app_name", "Nib"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "default"

    productFlavors {
        Official {
            manifestPlaceholders = [CHANNEL_VALUE: "Official"]
            dimension "default"
        }
        wandoujia {
            manifestPlaceholders = [CHANNEL_VALUE: "wandoujia"]
            dimension "default"
        }
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == 'debug') {
            variant.outputs.all { output ->
                outputFileName = "${defaultConfig.applicationId}_" +
                        "${variant.productFlavors.collect()[0].name}_debug.apk"
            }
        } else {
            variant.outputs.all { output ->
                outputFileName = "${defaultConfig.applicationId}_" +
                        "${defaultConfig.versionCode}_" +
                        "${defaultConfig.versionName}_" +
                        "${variant.productFlavors.collect()[0].name}.apk"
            }
        }
    }

    dataBinding {
        enabled = true
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':zxing')
    implementation project(':swagpoint')
    implementation project(':refreshlayout')

    implementation "com.android.support:design:$rootProject.ext.supportVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportVersion"
    implementation "com.android.support:cardview-v7:$rootProject.ext.supportVersion"
    implementation "com.android.support:support-dynamic-animation:$rootProject.ext.supportVersion"

    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.okHttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okHttp"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofit"
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.1.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'

    implementation 'com.github.bumptech.glide:glide:3.8.0'
    implementation 'com.google.code.gson:gson:2.8.1'

    implementation 'io.reactivex.rxjava2:rxjava:2.1.1'
    implementation('com.squareup.retrofit2:adapter-rxjava2:2.2.0') {
        exclude module: 'rxjava'
    }
    implementation('io.reactivex.rxjava2:rxandroid:2.0.1', {
        exclude group: 'io.reactivex.rxjava2', module: 'rxjava'
    })

    implementation 'org.greenrobot:greendao:3.2.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}

greendao {
    schemaVersion 1
}
