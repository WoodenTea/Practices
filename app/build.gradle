apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId "com.ymsfd.practices"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionMajor
        versionName "$rootProject.ext.versionMajor.$rootProject.ext.versionMinor.$rootProject.ext.versionPatch"
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias WOODENTEA_ALIAS
            keyPassword WOODENTEA_PASSWORD
        }

        debug {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias WOODENTEA_ALIAS
            keyPassword WOODENTEA_PASSWORD
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "API_URL", '"http://api.dev.com/"'
            resValue "string", "app_name", "Refill"
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug
        }

        release {
            buildConfigField "String", "API_URL", '"http://api.prod.com/"'
            resValue "string", "app_name", "Nib"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        Official {
            manifestPlaceholders = [CHANNEL_VALUE: "Official"]
        }
        wandoujia {
            manifestPlaceholders = [CHANNEL_VALUE: "wandoujia"]
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            File outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                String fileName;
                if (variant.buildType.name.equals('debug')) {
                    fileName = "${defaultConfig.applicationId}_" +
                            "v${defaultConfig.versionName}_" +
                            "${variant.productFlavors.collect()[0].name}.apk"
                } else {
                    fileName = "${defaultConfig.applicationId}_" +
                            "v${defaultConfig.versionName}_${rootProject.ext.releaseTime}_" +
                            "${variant.productFlavors.collect()[0].name}.apk"
                }
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile dependenciesLibrary.robolectric
    androidTestCompile dependenciesLibrary.robotium

    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':zxing')

    compile dependenciesLibrary.cardviewV7
    compile dependenciesLibrary.design
    compile dependenciesLibrary.recyclerviewV7
    compile dependenciesLibrary.supportV4
    compile dependenciesLibrary.okhttp
    compile dependenciesLibrary.loggingInterceptor
    compile dependenciesLibrary.retrofit
    compile dependenciesLibrary.adapterRxJava
    compile dependenciesLibrary.converterGson
    compile dependenciesLibrary.rxjava
    compile dependenciesLibrary.glide
    compile dependenciesLibrary.rxandroid
    compile dependenciesLibrary.rxbinding
    compile dependenciesLibrary.gson
    compile 'com.facebook.stetho:stetho:1.3.1'
    compile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
}
