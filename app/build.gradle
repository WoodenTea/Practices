import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

def releaseTime() {
    def df = new SimpleDateFormat('yyyyMMddHHmm')
    df.setTimeZone(TimeZone.getDefault())
    return df.format(new Date())
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        applicationId "com.ymsfd.practices"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 1
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias ymsfddev_ALIAS
            keyPassword ymsfddev_PASSWORD
        }

        debug {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias ymsfddev_ALIAS
            keyPassword ymsfddev_PASSWORD
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "API_URL", '"http://api.dev.com/"'
            resValue "string", "app_name", "Refill"
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug
        }

        release {
            buildConfigField "String", "API_URL", '"http://api.prod.com/"'
            resValue "string", "app_name", "Nib"

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                if (variant.buildType.name.equals("release") && outputFile != null
                        && outputFile.name.endsWith('.apk')) {
                    def outputFile = output.outputFile
                    def fileName = "${defaultConfig.applicationId}_v${defaultConfig.versionName}_" +
                            "${releaseTime()}_${variant.productFlavors[0].name}.apk"
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }
    }

    productFlavors {
        Official {
            manifestPlaceholders = [CHANNEL_VALUE: "Official"]
        }
        xiaomi {
            manifestPlaceholders = [CHANNEL_VALUE: "xiaomi"]
        }
        _360 {
            manifestPlaceholders = [CHANNEL_VALUE: "_360"]
        }
        baidu {
            manifestPlaceholders = [CHANNEL_VALUE: "baidu"]
        }
        wandoujia {
            manifestPlaceholders = [CHANNEL_VALUE: "wandoujia"]
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'io.reactivex:rxjava:1.1.0'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.squareup.retrofit:retrofit:2.0.0-beta2'
    compile 'com.jakewharton.rxbinding:rxbinding:0.3.0'
    compile 'com.squareup.retrofit:converter-gson:2.0.0-beta2'
    compile 'com.squareup.okhttp:logging-interceptor:2.7.0'
    compile 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.0'
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.3.1'
}
